[{"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/index.js":"1","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/reportWebVitals.js":"2","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/App.js":"3","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/config/reduxFirestore.js":"4","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/AddButton.js":"5","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/pages/PersonList.js":"6","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/pages/CreatePerson.js":"7","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/Layout.js":"8","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/pages/EditPerson.js":"9","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/PersonItem.js":"10","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/Form.js":"11","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/PersonItemOpen.js":"12","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/FormEdit.js":"13","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/styles/useLayoutStyles.js":"14","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/FormLoader.js":"15","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/styles/usePesonItemOpenStyles.js":"16","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/styles/usePersonItemStyles.js":"17"},{"size":751,"mtime":1625684488065,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1612373001279,"results":"20","hashOfConfig":"19"},{"size":925,"mtime":1612440449828,"results":"21","hashOfConfig":"19"},{"size":1190,"mtime":1612440621558,"results":"22","hashOfConfig":"19"},{"size":794,"mtime":1612440409916,"results":"23","hashOfConfig":"19"},{"size":2136,"mtime":1612444230661,"results":"24","hashOfConfig":"19"},{"size":159,"mtime":1612392534131,"results":"25","hashOfConfig":"19"},{"size":1091,"mtime":1612440731584,"results":"26","hashOfConfig":"19"},{"size":529,"mtime":1612440621556,"results":"27","hashOfConfig":"19"},{"size":2146,"mtime":1612440201184,"results":"28","hashOfConfig":"19"},{"size":5010,"mtime":1612443231313,"results":"29","hashOfConfig":"19"},{"size":3876,"mtime":1612440570043,"results":"30","hashOfConfig":"19"},{"size":4815,"mtime":1612443231311,"results":"31","hashOfConfig":"19"},{"size":181,"mtime":1612378094890,"results":"32","hashOfConfig":"19"},{"size":329,"mtime":1612437412820,"results":"33","hashOfConfig":"19"},{"size":396,"mtime":1612384068173,"results":"34","hashOfConfig":"19"},{"size":369,"mtime":1612378324396,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"jrp4yv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/index.js",[],["76","77"],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/reportWebVitals.js",[],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/App.js",[],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/config/reduxFirestore.js",[],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/AddButton.js",[],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/pages/PersonList.js",["78","79"],"import React, {useEffect, useState} from 'react';\nimport PersonItem from \"../components/PersonItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect}  from 'react-redux'\nimport {AnimateSharedLayout, AnimatePresence} from \"framer-motion\";\nimport PersonItemOpen from \"../components/PersonItemOpen\";\nimport { useSelector } from 'react-redux'\nimport {useFirebase, useFirebaseConnect} from 'react-redux-firebase'\n\n\nconst PersonList = ({users}) => {\n  const [selected, setSelected] = useState(null)\n  useFirebaseConnect('users')\n  const firebase = useFirebase()\n  useEffect(() => {\n    if(selected){\n      let exist = users.find(user => user.key === selected.key)\n      if(exist) {\n        if(exist.value.image !== selected.value.image){\n          firebase.storage()\n            .ref(exist.value.image)\n            .getDownloadURL()\n            .then( ref => setSelected({...exist, avatar: ref})\n            )\n        }else{\n\n          setSelected({...exist, avatar: selected.avatar})\n        }\n\n      }\n    }\n  }, [users])\n  return (\n        <AnimateSharedLayout type=\"crossfade\">\n          <Grid container direction=\"column\" spacing={2} style={{marginTop: '20px'}}>\n            {\n              users.map((user, index) =>\n                (<PersonItem\n                  id={user.key}\n                  key={user.key}\n                  index={index}\n                  {...user.value}\n                  onClick={(avatarUrl) => setSelected({...user, avatar: avatarUrl})}/>))\n            }\n          </Grid>\n          <AnimatePresence>\n            {\n              selected && (<PersonItemOpen\n                id={selected.key}\n                {...selected.value}\n                avatar={selected.avatar}\n                onDelete={async () => {\n                  await firebase.ref(`users/${selected.key}`).remove()\n                  setSelected(null)\n                }}\n                onClick={() => setSelected(null)}/>)\n            }\n          </AnimatePresence>\n\n        </AnimateSharedLayout>\n  );\n};\n\nexport default connect((state) => ({\n  users: state.firebase.ordered.users ? state.firebase.ordered.users : []\n}))(PersonList);\n","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/pages/CreatePerson.js",[],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/Layout.js",["80"],"import {useLayoutStyles} from \"../styles/useLayoutStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport {AnimateSharedLayout} from \"framer-motion\";\nimport React from \"react\";\nimport {useFirebase} from \"react-redux-firebase\";\n\nconst Layout = (props) => {\n  const firebase = useFirebase()\n  const classes = useLayoutStyles()\n\n  return (\n    <AnimateSharedLayout type=\"crossfade\">\n      <CssBaseline/>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"lg\">\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              ABM Personas\n            </Typography>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Container maxWidth={'md'}>\n        <Box>\n          {props.children}\n        </Box>\n      </Container>\n    </AnimateSharedLayout>\n  );\n};\n\nexport default Layout;\n","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/pages/EditPerson.js",[],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/PersonItem.js",["81"],"import Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {usePersonItemStyles} from \"../styles/usePersonItemStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {motion} from \"framer-motion\";\nimport {useEffect, useState} from \"react\";\nimport {useFirebase} from \"react-redux-firebase\";\n\n\nconst DEFAULT_IMAGE = 'https://cdn.icon-icons.com/icons2/1879/PNG/512/iconfinder-3-avatar-2754579_120516.png';\nconst DEFAULT_NAME = 'John Doe'\n\n\nconst PersonItem = ({\n  id,\n  image,\n  name=DEFAULT_NAME,\n  onClick,\n  index\n                    }) => {\n\n  const classes = usePersonItemStyles()\n  const firebase = useFirebase()\n\n  const [avatar, setAvatar] = useState(DEFAULT_IMAGE)\n\n  useEffect(() =>{\n    if(image){\n      firebase.storage()\n        .ref(image)\n        .getDownloadURL()\n        .then( ref => setAvatar(ref))\n    }\n\n  },[image])\n\n  return (\n      <Grid item lg>\n        <motion.div\n          initial={{x: 10, opacity: 0}}\n          exit={{ opacity: 0, x: -10, transition: { duration: 0.15, delay: index* .2 } }}\n          animate={{ x: 0, opacity: 1 }}\n          transition={{ ease: \"easeInOut\", duration: .3, delay: index* .1 }}\n        >\n          <Paper\n            component={motion.div}\n            elevation={4}\n            className={classes.paper}\n            layoutId={'person-item'+id}>\n            <Avatar component={motion.div}  alt={name} src={avatar} className={classes.avatar} />\n            <Typography component={motion.h6} variant={'h6'} className={classes.title} layoutId={'person-item-title-'+id}>\n              {name}\n            </Typography>\n            <Tooltip title=\"Ver\">\n              <IconButton component={motion.button} onClick={() => onClick(avatar)} color=\"inherit\">\n                <VisibilityIcon />\n              </IconButton>\n            </Tooltip>\n          </Paper>\n        </motion.div>\n\n      </Grid>\n  );\n};\n\nexport default PersonItem;\n","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/Form.js",["82","83"],"import React, {useRef, useState} from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {useHistory} from 'react-router-dom'\nimport {makeStyles} from \"@material-ui/core\";\nimport {useFirebase, useFirebaseConnect} from \"react-redux-firebase\";\nimport { v4 as uuidv4 } from 'uuid';\nimport {useForm} from \"react-hook-form\";\nimport FormLoader from \"./FormLoader\";\nimport {useSelector} from \"react-redux\";\nconst DEFAULT_AVATAR = \"https://www.w3schools.com/howto/img_avatar.png\"\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  avatarPicker: {\n    alignSelf: 'center',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: \"none\",\n  },\n  avatarLarge: {\n    width: theme.spacing(15),\n    height: theme.spacing(15),\n    borderColor: 'black',\n    borderWidth: theme.spacing(1)\n  },\n}))\n\nconst Form = () => {\n\n  const classes = useStyles()\n  const history = useHistory()\n  useFirebaseConnect('users')\n  const firebase = useFirebase()\n  const users = useSelector((state) => state.firebase.ordered.users ? state.firebase.ordered.users : [])\n  const form = useRef(null)\n  const fileInput = useRef(null)\n\n  const { register, handleSubmit, errors } = useForm({\n    mode: 'onChange',\n    reValidateMode: 'onChange',\n    defaultValues: {\n      email: '',\n      name: '',\n      phone: '',\n    },\n  });\n\n  const [avatar, setAvatar] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  const onSubmit =async (data) => {\n    setLoading(true)\n    const formData = new FormData(form.current)\n    let file = formData.get('avatar')\n    let fileName = null;\n    data.phone = parseInt(data.phone)\n    if(file.size > 0){\n      fileName = uuidv4() + '.' + file.name.split('.').pop()\n      await firebase.uploadFile('/',file,null,{name: fileName} )\n    }\n    if(fileName) data.image = fileName\n    firebase.ref('users').push(data, () => {\n      setLoading(false)\n      history.goBack()\n    })\n\n\n  }\n\n  const onFileInputChange = () => {\n    if(fileInput.current.files.length > 0){\n      let file = fileInput.current.files[0]\n      let reader = new FileReader()\n      reader.onload = () => setAvatar(reader.result)\n      reader.readAsDataURL(file)\n\n    }\n  }\n\n\n  return (\n    <form autoComplete=\"off\" ref={form} noValidate onSubmit={handleSubmit(onSubmit)}>\n      <div className={classes.avatarPicker}>\n        <input accept=\"image/*\" ref={fileInput} onChange={onFileInputChange} className={classes.inputFile} id=\"icon-button-file\" type=\"file\" name=\"avatar\" />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n            <Avatar src={avatar ? avatar : DEFAULT_AVATAR} className={classes.avatarLarge} />\n          </IconButton>\n        </label>\n      </div>\n      <TextField\n        fullWidth\n        className={classes.textField}\n        error={!!errors.name}\n        id=\"name\"\n        name=\"name\"\n        label=\"Nombre\"\n        defaultValue={''}\n        helperText={errors.name ? (errors.name.message || 'Este nombre ya esta registrado.') : ''}\n        required\n        inputRef={register({\n          required: 'Este campo es obligatorio.',\n          validate: value => {\n            let existUser = users.find( user => user.value.name === value)\n            return !existUser\n          }\n        })}\n      />\n      <TextField\n        fullWidth\n        className={classes.textField}\n        error={!!errors.phone}\n        id=\"phone\"\n        name=\"phone\"\n        label=\"Telefono\"\n        type=\"tel\"\n        defaultValue={''}\n        helperText={errors.phone ? errors.phone.message : ''}\n        inputRef={register({\n          required: 'Debes registrar un numero de telefono.',\n          pattern: {\n            value: /^\\d+$/,\n            message: 'Este campo solo permite numeros enteros.',\n          },\n        })}\n      />\n      <TextField\n        fullWidth\n        className={classes.textField}\n        error={!!errors.email}\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        label=\"Correo\"\n        defaultValue={''}\n        helperText={errors.email ? errors.email.message : ''}\n        inputRef={register({\n          required: 'Debes registrar una direccion email.',\n          pattern: {\n            value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n            message: 'Debes registrar una direccion email valida.',\n          },\n        })}\n      />\n      {\n        loading && <FormLoader/>\n      }\n      <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n        Registrar\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={() => history.goBack()}>\n        Volver\n      </Button>\n    </form>\n  );\n};\n\nexport default Form;\n","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/PersonItemOpen.js",[],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/FormEdit.js",["84","85","86"],"import React, {useEffect, useRef, useState} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormLoader from \"./FormLoader\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\nimport {useFirebase} from \"react-redux-firebase\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {useForm} from \"react-hook-form\";\nconst DEFAULT_AVATAR = \"https://www.w3schools.com/howto/img_avatar.png\"\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  avatarPicker: {\n    alignSelf: 'center',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: \"none\",\n  },\n  avatarLarge: {\n    width: theme.spacing(15),\n    height: theme.spacing(15),\n    borderColor: 'black',\n    borderWidth: theme.spacing(1)\n  },\n  nameTitle: {\n    textAlign: 'center'\n  }\n}))\n\n\n\nconst FormEdit = ({user, userId}) => {\n\n  const classes = useStyles()\n  const history = useHistory()\n  const firebase = useFirebase()\n  const form = useRef(null)\n  const fileInput = useRef(null)\n  const { register, handleSubmit, errors } = useForm({\n    mode: 'onChange',\n    reValidateMode: 'onChange',\n    defaultValues: {\n      email: user.email,\n      name: user.name ,\n      phone: user.phone,\n    },\n  });\n\n  const [avatar, setAvatar] = useState(null)\n  const [avatarDefault, setAvatarDefault] = useState(DEFAULT_AVATAR)\n  const [loading, setLoading] = useState(false)\n  const onFileInputChange = () => {\n    if(fileInput.current.files.length > 0){\n      let file = fileInput.current.files[0]\n      let reader = new FileReader()\n      reader.onload = () => setAvatar(reader.result)\n      reader.readAsDataURL(file)\n    }\n  }\n\n  useEffect(() =>{\n    if(user.image){\n      firebase.storage()\n        .ref(user.image)\n        .getDownloadURL()\n        .then( ref => setAvatarDefault(ref))\n    }\n\n  },[])\n\n  const onSubmit = async (data) => {\n    setLoading(true)\n    const formData = new FormData(form.current)\n    let file = formData.get('avatar')\n    let fileName = null;\n    if(file.size > 0){\n      fileName = uuidv4() + '.' + file.name.split('.').pop()\n      await firebase.uploadFile('/',file,null,{name: fileName} )\n    }\n    data.phone = parseInt(data.phone)\n    if(fileName) data.image = fileName\n    firebase.update(`users/${userId}`, data)\n      .then(snapshot => {\n        setLoading(false)\n        history.goBack()\n      })\n  }\n  if(!user){\n    return <FormLoader/>\n  }\n\n  return (\n    <form autoComplete=\"off\" ref={form} noValidate onSubmit={handleSubmit(onSubmit)}>\n      <div className={classes.avatarPicker}>\n        <input accept=\"image/*\" ref={fileInput} onChange={onFileInputChange} className={classes.inputFile} id=\"icon-button-file\" type=\"file\" name=\"avatar\" />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n            <Avatar src={avatar ? avatar : avatarDefault} className={classes.avatarLarge} />\n          </IconButton>\n          <Typography variant=\"h5\" className={classes.nameTitle} >\n            {user.name}\n          </Typography>\n        </label>\n      </div>\n\n      <TextField\n        fullWidth\n        className={classes.textField}\n        error={!!errors.phone}\n        id=\"phone\"\n        name=\"phone\"\n        label=\"Telefono\"\n        type=\"tel\"\n        defaultValue={user.phone}\n        helperText={errors.phone ? errors.phone.message : ''}\n        inputRef={register({\n          required: 'Debes registrar un numero de telefono.',\n          pattern: {\n            value: /^\\d+$/,\n            message: 'Este campo solo permite numeros enteros.',\n          },\n        })}\n      />\n      <TextField\n        fullWidth\n        className={classes.textField}\n        error={!!errors.email}\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        label=\"Correo\"\n        defaultValue={user.email}\n        helperText={errors.email ? errors.email.message : ''}\n        inputRef={register({\n          required: 'Debes registrar una direccion email.',\n          pattern: {\n            value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n            message: 'Debes registrar una direccion email valida.',\n          },\n        })}\n      />\n      {\n        loading && <FormLoader/>\n      }\n      <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n        Editar\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={() => history.goBack()}>\n        Volver\n      </Button>\n    </form>\n  );\n};\n\nexport default FormEdit;\n","/Volumes/Principal/2021/practices/sion/sion-abm-web/src/styles/useLayoutStyles.js",[],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/components/FormLoader.js",[],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/styles/usePesonItemOpenStyles.js",[],"/Volumes/Principal/2021/practices/sion/sion-abm-web/src/styles/usePersonItemStyles.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":32,"column":6,"nodeType":"97","endLine":32,"endColumn":13,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"99","line":13,"column":9,"nodeType":"93","messageId":"94","endLine":13,"endColumn":17},{"ruleId":"95","severity":1,"message":"100","line":39,"column":5,"nodeType":"97","endLine":39,"endColumn":12,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":151,"column":27,"nodeType":"104","messageId":"105","endLine":151,"endColumn":28,"suggestions":"106"},{"ruleId":"102","severity":1,"message":"103","line":151,"column":43,"nodeType":"104","messageId":"105","endLine":151,"endColumn":44,"suggestions":"107"},{"ruleId":"95","severity":1,"message":"108","line":80,"column":5,"nodeType":"97","endLine":80,"endColumn":7,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"103","line":148,"column":27,"nodeType":"104","messageId":"105","endLine":148,"endColumn":28,"suggestions":"110"},{"ruleId":"102","severity":1,"message":"103","line":148,"column":43,"nodeType":"104","messageId":"105","endLine":148,"endColumn":44,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firebase' and 'selected'. Either include them or remove the dependency array.","ArrayExpression",["114"],"'firebase' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.",["115"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["116","117"],["118","119"],"React Hook useEffect has missing dependencies: 'firebase' and 'user.image'. Either include them or remove the dependency array.",["120"],["121","122"],["123","124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"messageId":"129","fix":"130","desc":"131"},{"messageId":"132","fix":"133","desc":"134"},{"messageId":"129","fix":"135","desc":"131"},{"messageId":"132","fix":"136","desc":"134"},{"desc":"137","fix":"138"},{"messageId":"129","fix":"139","desc":"131"},{"messageId":"132","fix":"140","desc":"134"},{"messageId":"129","fix":"141","desc":"131"},{"messageId":"132","fix":"142","desc":"134"},"Update the dependencies array to be: [firebase, selected, users]",{"range":"143","text":"144"},"Update the dependencies array to be: [firebase, image]",{"range":"145","text":"146"},"removeEscape",{"range":"147","text":"148"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"149","text":"150"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"151","text":"148"},{"range":"152","text":"150"},"Update the dependencies array to be: [firebase, user.image]",{"range":"153","text":"154"},{"range":"155","text":"148"},{"range":"156","text":"150"},{"range":"157","text":"148"},{"range":"158","text":"150"},[1020,1027],"[firebase, selected, users]",[1088,1095],"[firebase, image]",[4559,4560],"",[4559,4559],"\\",[4575,4576],[4575,4575],[2146,2148],"[firebase, user.image]",[4363,4364],[4363,4363],[4379,4380],[4379,4379]]